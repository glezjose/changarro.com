///////////////////////////////////////////////////////////
//  Compra.cs
//  Implementation of the Class Compra
//  Generated by Enterprise Architect
//  Created on:      14-nov.-2019 05:15:32 p. m.
//  Original author: jose.gonzalez
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Changarro.Model;
using Changarro.Model.DTO;
using System.Linq;
using System.Data.Entity;

namespace Changarro.Business
{
    public class Compra
    {

        private readonly CHANGARROEntities db;

        public Compra()
        {
            db = new CHANGARROEntities();
            db.Configuration.LazyLoadingEnabled = false;
            db.Configuration.ProxyCreationEnabled = false;
        }

        ~Compra()
        {

        }

        /// <summary>
        /// Este método agrega una compra a la BD.
        /// </summary>
        /// <param name="iIdCliente">La ID del cliente comprador.</param>
        /// <param name="iIdTarjeta">La ID de la tarjeta con la que se realizará la compra.</param>
        /// <param name="iIdDireccion">La ID de la dirección donde se enviará la compra.</param>
        /// <returns>Regresa la ID de la compra registrada.</returns>
        public int AgregarCompra(int iIdCliente, tblCat_Compra oCompra)
        {
            oCompra.iIdCliente = iIdCliente;

            db.tblCat_Compra.Add(oCompra);
            db.SaveChanges();

            return oCompra.iIdCompra;
        }
        /// 
        /// <param name="iIdCompra"></param>
        public void CancelarCompra(int iIdCompra)
        {

        }

        /// 
        /// <param name="iIdCliente"></param>
        public List<tblCat_Compra> ObtenerCompras(int iIdCliente)
        {

            return null;
        }

        /// 
        /// <param name="iIdProducto"></param>
        /// <param name="iCantidad"></param>
        public void RealizarCompraDirecta(ProductosCompraDTO oProducto, int iIdCompra)
        {
            tbl_DetalleCompra _oDetalleCompra = new tbl_DetalleCompra()
            {
                iIdCompra =  iIdCompra,
                iIdProducto = oProducto.iIdProducto,
                iCantidad = oProducto.iCantidadSeleccion
            };

            db.Entry(_oDetalleCompra).State = EntityState.Added;

            tblCat_Producto _oProducto = db.tblCat_Producto.AsNoTracking().FirstOrDefault(p => p.iIdProducto == _oDetalleCompra.iIdProducto);
            _oProducto.iCantidad -= _oDetalleCompra.iCantidad;

            db.Entry(_oProducto).State = EntityState.Modified;

            db.SaveChanges();
        }

        /// 
        /// <param name="iIdCarrito"></param>
        public void RealizarCompraCarrito(int iIdCarrito, int iIdCompra)
        {
            List<ProductosCompraDTO> _lstProductos = ObtenerProductosCompra(iIdCarrito);

            foreach (var _producto in _lstProductos)
            {
                tbl_DetalleCompra _oDetalleCompra = new tbl_DetalleCompra();

                _oDetalleCompra.iIdCompra = iIdCompra;
                _oDetalleCompra.iIdProducto = _producto.iIdProducto;
                _oDetalleCompra.iCantidad = _producto.iCantidadSeleccion;

                db.Entry(_oDetalleCompra).State = EntityState.Added;

                tblCat_Producto _oProducto = db.tblCat_Producto.AsNoTracking().FirstOrDefault(p => p.iIdProducto == _producto.iIdProducto);
                _oProducto.iCantidad -= _producto.iCantidadSeleccion;

                db.Entry(_oProducto).State = EntityState.Modified;
            }
            db.SaveChanges();

        }

        public CarritoDTO ObtenerProductoCompraDirecta(int iIdProducto)
        {
            CarritoDTO _oProducto = db.tblCat_Producto.AsNoTracking().Where(p => p.iIdProducto == iIdProducto).Select(p => new CarritoDTO
            {
                iIdProducto = p.iIdProducto,
                iIdCategoria = p.iIdCategoria,
                iCantidad = 1,
                iCantidadExistente = p.iCantidad,
                dPrecio = p.dPrecio,
                cNombre = p.cNombre,
                cImagen = p.cImagen,
                cDescripcion = p.cDescripcion
            }).FirstOrDefault();

            return _oProducto;

        }

        public ProductosCompraDTO ObtenerProductoCompraDirecta(int iIdProducto, int iCantidad)
        {
            ProductosCompraDTO _oProducto = db.tblCat_Producto.AsNoTracking().Where(p => p.iIdProducto == iIdProducto).Select(p => new ProductosCompraDTO
            {
                iIdProducto = p.iIdProducto,
                iCantidadSeleccion = iCantidad,
                dPrecioTotal = (iCantidad * p.dPrecio),
                cNombre = p.cNombre,
                cImagen = p.cImagen
            }).FirstOrDefault();

            return _oProducto;
        }

        public List<ProductosCompraDTO> ObtenerProductosCompra(int iIdCarrito)
        {
            List<ProductosCompraDTO> _lstProductos = db.tbl_DetalleCarrito.AsNoTracking().Where(p => p.iIdCarrito == iIdCarrito).Select(p => new ProductosCompraDTO
            {
                iIdProducto = p.iIdProducto,
                iCantidadSeleccion = p.iCantidad,
                dPrecioTotal = (p.iCantidad * p.tblCat_Producto.dPrecio),
                cNombre = p.tblCat_Producto.cNombre,
                cImagen = p.tblCat_Producto.cImagen
            }).ToList();

            return _lstProductos;
        }

    }//end Compra

}//end namespace ChangarroBusiness