///////////////////////////////////////////////////////////
//  Categoria.cs
//  Implementation of the Class Categoría
//  Generated by Enterprise Architect
//  Created on:      14-nov.-2019 05:22:49 p. m.
//  Original author: jose.gonzalez
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using System.Linq;
using Changarro.Model;
using Changarro.Model.DTO;

namespace Changarro.Business
{
    public class Categoria {

        private readonly CHANGARROEntities db;

		public Categoria(){
            db = new CHANGARROEntities();
            db.Configuration.LazyLoadingEnabled = false;
            db.Configuration.ProxyCreationEnabled = false;
		}

		~Categoria(){

		}

		public CategoriasDTO AgregarCategoria(){

			return null;
		}

		/// 
		/// <param name="iIdCategoria"></param>
		public void DesactivarCategoria(int iIdCategoria){

		}

		/// 
		/// <param name="iIdCategoria"></param>
		public CategoriasDTO EditarCategoria(int iIdCategoria){

			return null;
		}

        /// <summary>
        /// Este método obtiene una lista de las categorías en la BD.
        /// </summary>
        /// <returns>Regresa tal lista.</returns>
		public List<tblCat_Categoria> ObtenerCategorias(){

            List<tblCat_Categoria> _lstCategorias = db.tblCat_Categoria.AsNoTracking().ToList();

            return _lstCategorias;
		}

		public List<ProductosDTO> ObtenerProductos(){

			return null;
		}

        /// <summary>
        /// Este método obtiene el nombre de la categoría por id.
        /// </summary>
        /// <param name="iIdCategoria">La id de la categoría.</param>
        /// <returns>Regresa la cadena del nombre.</returns>
        public string ObtenerNombreCategoria(int iIdCategoria)
        {
            string _cNombreCategoria = db.tblCat_Categoria.AsNoTracking().Where(c => c.iIdCategoria == iIdCategoria).FirstOrDefault().cNombre;

            return _cNombreCategoria;
        }


	}//end Categoría

}//end namespace ChangarroBusiness